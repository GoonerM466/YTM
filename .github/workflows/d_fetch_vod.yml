name: Fetch VOD VideoID

on:
  workflow_dispatch:

jobs:
  extract-m3u8:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install yt-dlp and jq
      run: |
        curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp
        chmod a+rx /usr/local/bin/yt-dlp
        sudo apt-get install jq

    - name: Fetch latest changes from remote
      run: |
        git fetch origin main
        git pull origin main --no-edit

    - name: Extract channel information
      run: |
        echo "Fetching channel information..."
        while IFS=, read -r channel_name group channel_url; do
          echo "Processing $channel_name from $group group with URL $channel_url/streams"
          found_video_with_format_300=false
          videos_checked=0
          
          while [ "$found_video_with_format_300" = false ] && [ "$videos_checked" -lt 20 ]; do
            video_info=$(yt-dlp -j "$channel_url/streams" --datebefore "$(date -u -d '1 day ago' +"%Y%m%d")" --skip-download --skip-unavailable-fragments)
            
            echo "$video_info"  # Display video info for troubleshooting
            
            # Check if the JSON data is not null
            if [ "$video_info" != "null" ]; then
              video_ids=$(echo "$video_info" | jq -r '.entries[] | select(.formats[].format_id == 300) | .id')
              
              if [ -n "$video_ids" ]; then
                IFS=',' read -ra video_ids_array <<< "$video_ids"
                for video_id in "${video_ids_array[@]}"; do
                  echo "Adding Video ID $video_id to VOD_to_fetch.txt"
                  touch VOD_to_fetch.txt
                  echo "$video_id, $group, $channel_url" >> VOD_to_fetch.txt
                  found_video_with_format_300=true
                  break
                done
              else
                echo "No available videos with format 300 for $channel_name. Checking the next video..."
              fi
            else
              echo "Error: No video information available for $channel_name."
            fi
            
            ((videos_checked++))
          done
          
          if [ "$found_video_with_format_300" = false ]; then
            echo "No videos with format 300 found after checking 20 videos for $channel_name. Moving to the next channel..."
          fi
        done < current_channels.txt

    - name: Display VOD_to_fetch.txt content
      run: cat VOD_to_fetch.txt

    - name: Commit changes
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        git add VOD_to_fetch.txt
        git commit -m "Update VOD_to_fetch.txt"
        git push
