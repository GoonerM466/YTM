name: D-Fetch VOD

on:
  push:
    branches:
      - main

jobs:
  extract-m3u8:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install yt-dlp
      run: |
        curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp
        chmod a+rx /usr/local/bin/yt-dlp

    - name: Fetch latest changes from remote
      run: |
        git fetch origin main
        git pull origin main --no-edit
        git rebase origin/main

    - name: Read live URLs from file
      run: |
        while IFS=, read -r channel_name group live_url; do
          echo "Processing live URL: $live_url"
          
          # Modify the live_url as needed
          modified_url="${live_url/live/streams}"
          
          echo "Modified URL: $modified_url"

          # Check if the video is live or scheduled
          status_check=$(yt-dlp "$modified_url" --skip-download)
          if [[ "$status_check" == *"is live"* || "$status_check" == *"is scheduled"* ]]; then
            echo "Video is live or scheduled. Skipping..."
            continue
          fi

          mkdir -p "./vod/$channel_name"
          m3u8_file="./vod/$channel_name/vod_videos.m3u8"

          # Truncate the file before writing
          : > "$m3u8_file"

          start_time=$(date +%s)
          attempts=0
          fallback_url_attempt=0
          broken_pipe_count=0
          
          while [ $attempts -lt 3 ]; do
            echo "Attempting to extract video URL (Attempt $((attempts + 1)))..."
            m3u8_url=$(timeout 10 yt-dlp "$modified_url" --get-url --skip-download --format "bestvideo[ext=m3u8]+bestaudio[ext=m4a]/best[ext=m3u8]/best" || true)  # Ignore errors
            
            if [ $? -eq 0 ]; then
              # Check if the URL is an M3U8 link
              if [[ $m3u8_url == *".m3u8"* ]]; then
                echo "M3U8 Video URL found: $m3u8_url"
                echo "$m3u8_url" >> "$m3u8_file"
                break
              else
                echo "Found non-M3U8 link. Skipping..."
              fi
            else
              if [[ "$m3u8_url" == *"broken pipe"* ]]; then
                echo "Encountered 'broken pipe' response. Retrying..."
                ((broken_pipe_count++))
                if [ $broken_pipe_count -ge 2 ]; then
                  echo "Received 'broken pipe' response twice. Moving on to the next entry."
                  break
                fi
              else
                echo "Error extracting video URL. Attempt $((attempts + 1)) failed. Error: $m3u8_url"
              fi
            fi
            
            ((attempts++))
            sleep 2  # Sleep for 2 seconds between attempts
          done

          if [ $broken_pipe_count -ge 2 ]; then
            continue  # Skip to the next entry in case of two 'broken pipe' responses
          fi

          echo "M3U8 content:"
          cat "$m3u8_file"

          echo "Creating M3U8 file..."
          echo "#EXTM3U" > "./vod/$channel_name/vod_videos_temp.m3u8"
          echo "#EXT-X-VERSION:3" >> "./vod/$channel_name/vod_videos_temp.m3u8"
          video_number=1
          while read -r line; do
            echo "#EXT-X-STREAM-INF:NAME=\"FHD\",RESOLUTION=1920x1080,BANDWIDTH=${video_number}" >> "./vod/$channel_name/vod_videos_temp.m3u8"
            echo "${line}" >> "./vod/$channel_name/vod_videos_temp.m3u8"
            ((video_number++))
          done < "$m3u8_file"

          mv "./vod/$channel_name/vod_videos_temp.m3u8" "$m3u8_file"

          echo "Committing changes..."
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git add -A
          git diff --cached --quiet || git commit -m "Updated M3U8 files"
          git push origin main
        done < ./program/alt_urls.txt
