name: Fetch Video Information

on:
  schedule:
    - cron: '0 */4 * * *'  # Run every 4 hours
  workflow_dispatch:
  
jobs:
  fetch_video_info:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Install youtube-dl
      run: |
        sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
        sudo chmod a+rx /usr/local/bin/youtube-dl

    - name: Set Git Config
      run: |
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"

    - name: Fetch video information
      run: |
        set -x
        # Use a temporary file to store the updated information
        temp_file="./program/temp/VOD_to_fetch_temp.txt.tmp"
        > "$temp_file"  # Clear the temp file

        while IFS=, read -r channel_name group video_url video_image; do
          # Check if any of the required variables is empty
          if [ -z "$channel_name" ] || [ -z "$group" ] || [ -z "$video_url" ] || [ -z "$video_image" ]; then
            echo "One or more required variables are empty. Skipping..."
            continue
          fi

          # Extract video ID using Python
          video_id=$(python -c "from urllib.parse import urlparse, parse_qs; print(parse_qs(urlparse('$video_url').query)['v'][0])")

          # Construct modified video URL
          modified_video_url="https://www.youtube.com/watch?v=$video_id"
          # Fetch video metadata using youtube-dl
          metadata_json=$(youtube-dl -j --skip-download "$modified_video_url")

          # Extract relevant information from the metadata JSON
          title=$(echo "$metadata_json" | jq -r '.title')
          upload_date=$(echo "$metadata_json" | jq -r '.upload_date')
          view_count=$(echo "$metadata_json" | jq -r '.view_count')

          # Print values for debugging
          echo "Channel:$channel_name,Group:$group,Video URL:$video_url,Image:$video_image,Title:$title,Upload Date:$upload_date,View Count:$view_count"

          # Save information to the temporary file
          echo "$channel_name,$group,$video_url,$video_image,$title,$upload_date,$view_count" >> "$temp_file"
        done < "./program/temp/VOD_to_fetch_temp.txt"
        set +x

        # Overwrite the original file with the updated information
        mv "$temp_file" "./program/temp/VOD_to_fetch_temp.txt"

    - name: Add, Commit, and Push Changes
      run: |
        git add ./program/temp/VOD_to_fetch_temp.txt
        git commit -m "Update VOD_to_fetch_temp.txt with latest videos & metadata"
        git pull origin main --no-rebase
        git merge -s ours origin/main
        git push origin main
