name: zz-Filter VOD

on:
  schedule:
    - cron: '01 0/2 * * *'
  workflow_dispatch:

jobs:
  fetch-live-vod:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install yt-dlp
      run: |
        # Download the latest version of yt-dlp
        latest_release_url=$(curl -s https://api.github.com/repos/yt-dlp/yt-dlp/releases/latest | jq -r '.assets[] | select(.name | contains("yt-dlp")) | .browser_download_url')
        curl -L "$latest_release_url" -o /usr/local/bin/yt-dlp
        chmod a+rx /usr/local/bin/yt-dlp


    - name: Install jq
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

    - name: Read channel information from VOD_to_fetch.txt
      run: |
        # Create a temporary file to store updated entries
        tmpfile=$(mktemp)

        while IFS=, read -r channel_name group video_url image_url; do
          # Check if the video is live
          is_live=$(yt-dlp --print-json "$video_url" | jq -r '.is_live')
          if [ "$is_live" = "true" ]; then
            echo "$video_url is live - discarding!"
          else
            echo "$video_url is not live - saving!"
            # If not live, append the entry to the temporary file
            echo "$channel_name,$group,$video_url,$image_url" >> "$tmpfile"
          fi
          # Introduce a 2-second delay
          sleep 2
        done < ./program/VOD_to_fetch.txt

        # Overwrite the original file with the updated entries
        mv "$tmpfile" ./program/VOD_to_fetch.txt

    - name: Commit and push changes
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add -A
        git diff --cached --quiet || git commit -m "Filtered VOD List"
        git push origin main
